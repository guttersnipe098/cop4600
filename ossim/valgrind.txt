==21642== Memcheck, a memory error detector
==21642== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==21642== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info
==21642== Command: ./sim
==21642== Parent PID: 17054
==21642== 
==21642== Conditional jump or move depends on uninitialised value(s)
==21642==    at 0x804A400: Next_pgm (obj3.c:290)
==21642==    by 0x804A288: Logon_Service (obj3.c:111)
==21642==    by 0x804AD37: Interrupt_Handler (simulator.c:344)
==21642==    by 0x804AC3C: main (simulator.c:273)
==21642== 
==21642== Conditional jump or move depends on uninitialised value(s)
==21642==    at 0x804A87C: Dealloc_pgm (obj3.c:727)
==21642==    by 0x804A418: Next_pgm (obj3.c:295)
==21642==    by 0x804A288: Logon_Service (obj3.c:111)
==21642==    by 0x804AD37: Interrupt_Handler (simulator.c:344)
==21642==    by 0x804AC3C: main (simulator.c:273)
==21642== 
==21642== Use of uninitialised value of size 4
==21642==    at 0x804A884: Dealloc_pgm (obj3.c:732)
==21642==    by 0x804A418: Next_pgm (obj3.c:295)
==21642==    by 0x804A288: Logon_Service (obj3.c:111)
==21642==    by 0x804AD37: Interrupt_Handler (simulator.c:344)
==21642==    by 0x804AC3C: main (simulator.c:273)
==21642== 
==21642== Invalid read of size 4
==21642==    at 0x804A884: Dealloc_pgm (obj3.c:732)
==21642==    by 0x804A418: Next_pgm (obj3.c:295)
==21642==    by 0x804A288: Logon_Service (obj3.c:111)
==21642==    by 0x804AD37: Interrupt_Handler (simulator.c:344)
==21642==    by 0x804AC3C: main (simulator.c:273)
==21642==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==21642== 
==21642== 
==21642== Process terminating with default action of signal 11 (SIGSEGV)
==21642==  Access not within mapped region at address 0x8
==21642==    at 0x804A884: Dealloc_pgm (obj3.c:732)
==21642==    by 0x804A418: Next_pgm (obj3.c:295)
==21642==    by 0x804A288: Logon_Service (obj3.c:111)
==21642==    by 0x804AD37: Interrupt_Handler (simulator.c:344)
==21642==    by 0x804AC3C: main (simulator.c:273)
==21642==  If you believe this happened as a result of a stack
==21642==  overflow in your program's main thread (unlikely but
==21642==  possible), you can try to increase the size of the
==21642==  main thread stack using the --main-stacksize= flag.
==21642==  The main thread stack size used in this run was 8388608.
==21642== 
==21642== HEAP SUMMARY:
==21642==     in use at exit: 6,548 bytes in 38 blocks
==21642==   total heap usage: 49 allocs, 11 frees, 8,946 bytes allocated
==21642== 
==21642== LEAK SUMMARY:
==21642==    definitely lost: 0 bytes in 0 blocks
==21642==    indirectly lost: 0 bytes in 0 blocks
==21642==      possibly lost: 0 bytes in 0 blocks
==21642==    still reachable: 6,548 bytes in 38 blocks
==21642==         suppressed: 0 bytes in 0 blocks
==21642== Reachable blocks (those to which a pointer was found) are not shown.
==21642== To see them, rerun with: --leak-check=full --show-reachable=yes
==21642== 
==21642== For counts of detected and suppressed errors, rerun with: -v
==21642== Use --track-origins=yes to see where uninitialised values come from
==21642== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 14 from 7)
